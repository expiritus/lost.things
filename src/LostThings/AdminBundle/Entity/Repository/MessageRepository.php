<?php

namespace LostThings\AdminBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * MessageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MessageRepository extends EntityRepository
{



    public function search($search){
        return $this->getEntityManager()
            ->createQuery("SELECT m FROM LostThingsAdminBundle:Message m WHERE
                             m.sendUserId IN
                              (SELECT u.id FROM LostThingsAdminBundle:User u WHERE u.username LIKE :search)")
            ->setParameter('search', "%$search%")
            ->getResult();
    }

    public function findAll($order = 'ASC')
    {
        return $this->findBy(array(), array('createdAt' => $order));
    }

    public function findSend($user){
        return $this->getEntityManager()
            ->createQuery('SELECT c FROM LostThingsAdminBundle:Message c WHERE c.sendUserId = :user ')
//            ->setFirstResult(0)
//            ->setMaxResults(1)
            ->setParameter('user', $user)
            ->getResult();
    }

    public function findReceived($user){
        return $this->getEntityManager()
            ->createQuery('SELECT c FROM LostThingsAdminBundle:Message c WHERE c.receivedUserId = :user')
//            ->setFirstResult(0)
//            ->setMaxResults(1)
            ->setParameter('user', $user)
            ->getResult();
    }

    public function findReceivedAndSend($user){
        return $this->getEntityManager()
            ->createQuery('SELECT c FROM LostThingsAdminBundle:Message c WHERE c.receivedUserId = :user OR c.sendUserId = :user')
            ->setParameter('user', $user)
            ->getResult();
    }


    public function findMessages($received_user, $send_user_id){
        return $this->getEntityManager()
            ->createQuery('SELECT r FROM LostThingsAdminBundle:Message r
                            WHERE r.sendUserId = :sendUserId
                              AND r.receivedUserId = (SELECT u1.id FROM LostThingsAdminBundle:User u1 WHERE u1.username = :receivedUser)
                                OR r.sendUserId = (SELECT u2.id FROM LostThingsAdminBundle:User u2 WHERE u2.username = :receivedUser)
                                  AND r.receivedUserId = :sendUserId
                                    ORDER BY r.createdAt')
            ->setParameter('receivedUser', $received_user)
            ->setParameter('sendUserId', $send_user_id)
            ->getResult();
    }


    public function dontReadMessage($user_id){
        return $this->getEntityManager()
            ->createQuery('SELECT m FROM LostThingsAdminBundle:Message m WHERE m.receivedUserId = :userId AND m.status = 0 ORDER by m.createdAt DESC')
            ->setParameter('userId', $user_id)
            ->getResult();
    }

    public function updateStatus($user_id){
        return $this->getEntityManager()
            ->createQuery('UPDATE LostThingsAdminBundle:Message m SET m.status = 1 WHERE m.receivedUserId = :sendUserId AND m.status = 0')
            ->setParameter('sendUserId', $user_id)
            ->getResult();
    }
}
